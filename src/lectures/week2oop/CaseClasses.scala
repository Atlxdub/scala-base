package src.lectures.week2oop

object CaseClasses {
  //объявление класса (класс как чертеж, по которому создается объект (экземпляр класса))
  //объявление полей класса позволит отличить один экземпляр класса от другого (конструктор)
  /*class Student(id: Int, name: String) {
    //def позволяет задать несколько конструкторов. В данном случае это будут параметры по умолчанию
    def this() = this(0, "name")
    println("Ты обратился к классту Студент. Я вывелся, потому что я есть в конструкторе")
    def showId() = println(s"Student had id = $id")

    def showId(n: Int): Unit = {
      for(i <- 0 to n) println(s"Student had id = $id")
    }

    def showName(name: String): Unit = {
      println(s"Ну тут имечко: ${this.name}. Понял, $name?")
    }

  }*/


  // создание экземпляра класса (объекта) сопровождается ключевым словом new
  //val student = new Student()

  //Однако, если использовать case class, то new указывать не нужно.
  //Помимо этого, case class ссылается на указанные параметры класса, а не на хеш
  //это позволяет использовать .toString в связке с case class

  //ДОСТУПНОСТЬ КОМПОНЕНТОВ КЛАССА
  /*
  private - видно только внутри класса, не наследуется
  protected - видно только внутри класса, наследуется
  public - видно везде, наследуется
  */

  //перегрузка методов позволяет использовать методы с одним именем, но разными параметрами, что позволяет
  //компилятору понимать, какой метод следует вызвать

  def main(args: Array[String]): Unit = {
   /* student.showId()
    println("Ну а тут 5 отправляем")
    student.showId(5)
    println("Ну и выведем имя")
    student.showName("Поп")*/


  }
}
